out <- glmnet(x,y,alpha = 0)
ridge_coef <- predict(out, type = "coefficients", s = bestlam)[1:14,]
kable(ridge_coef, col.names = "Ridge Coefficients",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
set.seed(1)
lasso_mod <- glmnet(x[train,], y[train], alpha = 1, lambda = grid)
cv_out = cv.glmnet(x[train,], y[train], alpha = 1)
plot(cv_out)
bestlam <- cv_out$lambda.min
lasso_pred <- predict(lasso_mod, s = bestlam, newx = x[test,])
kable(mean((lasso_pred - y_test)^2), col.names = "Mean Sq. Error Lasso",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
out <- glmnet(x,y,alpha = 1)
lasso_coef <- predict(out, type = "coefficients", s = bestlam)[1:14,]
kable(lasso_coef[lasso_coef!= 0], col.names = "Lasso Coefficients",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
set.seed(1234)
df2 <- Carseats
df2 <- df2 %>% na.omit()
train <- sample(nrow(df2), nrow(df2)/2)
test <- -train
traindf2 <- df2[train,]
testdf2 <- df2[test,]
tree_b <- tree(Sales~., df2, subset = train)
plot(tree_b)
text(tree_b, pretty = 0, cex = 0.6)
pred_b <- predict(tree_b, newdata = testdf2)
test_sales <- testdf2$Sales
plot(pred_b, test_sales)
abline(0,1)
kable(mean((pred_b - test_sales)^2), col.names = "Mean Sq. Error Tree",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
cv_c <- cv.tree(tree_b)
plot(cv_c$size, cv_c$dev, type = "b")
prune_c <- prune.tree(tree_b, best = 6)
plot(prune_c)
text(prune_c, pretty = 0, cex = 0.6)
pred_c <- predict(prune_c, newdata = testdf2)
plot(pred_c, test_sales)
abline(0,1)
kable(mean((pred_c - test_sales)^2), col.names = "Mean Sq. Error Prune Tree",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
bag_d <- randomForest(Sales~., data = df2, subset = train, mtry = 10, importance = T)
bag_pred <- predict(bag_d, newdata = testdf2)
plot(bag_pred, test_sales)
abline(0,1)
kable(mean((bag_pred - test_sales)^2), col.names = "Mean Sq. Error Bagging",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
importance(bag_d)
rf_e6 <- randomForest(Sales~., data = df2, subset = train, mtry = 6, importance = T)
rf_pred6 <- predict(rf_e6, newdata= testdf2)
kable(mean((rf_pred6 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 6",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
rf_e5 <- randomForest(Sales~., data = df2, subset = train, mtry = 5, importance = T)
rf_pred5 <- predict(rf_e5, newdata= testdf2)
kable(mean((rf_pred5 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 5",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
rf_e7 <- randomForest(Sales~., data = df2, subset = train, mtry = 7, importance = T)
rf_pred7 <- predict(rf_e7, newdata= testdf2)
kable(mean((rf_pred7 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 7",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
rf_mse <- function(m) {
rf_e <-
randomForest(
Sales ~ .,
data = df2,
subset = train,
mtry = m,
importance = T
)
rf_pred <- predict(rf_e, newdata = testdf2)
kable(mean((rf_pred - test_sales) ^ 2), col.names = "Mean Sq. Error RF",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
}
rf_mse(1)
rf_mse(2)
rf_mse(3)
rf_mse(4)
rf_mse(5))
rf_mse(5)
rf_mse(6)
mse <- rep(0, m)
mse <- rep(0, 10)
mse <- rep(0, 10)
rf_mse <- function(m) {
rf_e <-
randomForest(
Sales ~ .,
data = df2,
subset = train,
mtry = m,
importance = T
)
rf_pred <- predict(rf_e, newdata = testdf2)
mse[m] <- mean((rf_pred - test_sales) ^ 2)
}
for (i in c(1:10)){
rf_mse(i)
}
kable(rf_mse, col.names = "Mean Sq. Error RF",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
kable(mse, col.names = "Mean Sq. Error RF",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
rf_mse(10)
mse <- rep(0, 10)
rf_mse <- function(m) {
rf_e <-
randomForest(
Sales ~ .,
data = df2,
subset = train,
mtry = m,
importance = T
)
rf_pred <- predict(rf_e, newdata = testdf2)
mse[m] <- mean((rf_pred - test_sales) ^ 2)
}
rf_mse(10)
rf_mse(1)
mse[m] = mean((rf_pred - test_sales) ^ 2)
mse[1] = mean((rf_pred - test_sales) ^ 2)
rf_mse <- function(m) {
rf_e <-
randomForest(
Sales ~ .,
data = df2,
subset = train,
mtry = m,
importance = T
)
rf_pred <- predict(rf_e, newdata = testdf2)
mse[m] = mean((rf_pred - test_sales) ^ 2)
}
rf_mse(1)
for (i in c(1:10)){
rf_mse(i)
}
mse <- rep(0, 10)
mse <- rep(0, 10)
rf_mse <- function(m) {
rf_e <-
randomForest(
Sales ~ .,
data = df2,
subset = train,
mtry = m,
importance = T
)
rf_pred <- predict(rf_e, newdata = testdf2)
return(mean((rf_pred - test_sales) ^ 2))
}
rf_mse(1)
for (i in c(1:10)){
mse[i] <- rf_mse(i)
}
kable(mse, col.names = "Mean Sq. Error RF",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
# rf_e6 <- randomForest(Sales~., data = df2, subset = train, mtry = 6, importance = T)
#
# rf_pred6 <- predict(rf_e6, newdata= testdf2)
#
# kable(mean((rf_pred6 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 6",
#       digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
#
# rf_e5 <- randomForest(Sales~., data = df2, subset = train, mtry = 5, importance = T)
#
# rf_pred5 <- predict(rf_e5, newdata= testdf2)
#
# kable(mean((rf_pred5 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 5",
#       digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
#
#
# rf_e7 <- randomForest(Sales~., data = df2, subset = train, mtry = 7, importance = T)
#
# rf_pred7 <- predict(rf_e7, newdata= testdf2)
#
# kable(mean((rf_pred7 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 7",
#       digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
rf_e6 <- randomForest(Sales~., data = df2, subset = train, mtry = 6, importance = T)
rf_pred6 <- predict(rf_e6, newdata= testdf2)
kable(mean((rf_pred6 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 6",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
mse <- rep(0, 10)
rf_mse <- function(m) {
set.seed(1)
rf_e <-
randomForest(
Sales ~ .,
data = df2,
subset = train,
mtry = m,
importance = T
)
rf_pred <- predict(rf_e, newdata = testdf2)
return(mean((rf_pred - test_sales) ^ 2))
}
rf_mse(1)
for (i in c(1:10)){
mse[i] <- rf_mse(i)
}
kable(mse, col.names = "Mean Sq. Error RF",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
rf_e6 <- randomForest(Sales~., data = df2, subset = train, mtry = 6, importance = T)
rf_pred6 <- predict(rf_e6, newdata= testdf2)
kable(mean((rf_pred6 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 6",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
# rf_e5 <- randomForest(Sales~., data = df2, subset = train, mtry = 5, importance = T)
#
# rf_pred5 <- predict(rf_e5, newdata= testdf2)
#
# kable(mean((rf_pred5 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 5",
#       digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
#
#
# rf_e7 <- randomForest(Sales~., data = df2, subset = train, mtry = 7, importance = T)
#
# rf_pred7 <- predict(rf_e7, newdata= testdf2)
#
# kable(mean((rf_pred7 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 7",
#       digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
mse <- rep(0, 10)
rf_mse <- function(m) {
set.seed(1)
rf_e <-
randomForest(
Sales ~ .,
data = df2,
subset = train,
mtry = m,
importance = T
)
rf_pred <- predict(rf_e, newdata = testdf2)
return(mean((rf_pred - test_sales) ^ 2))
}
rf_mse(1)
for (i in c(1:10)){
mse[i] <- rf_mse(i)
}
kable(mse, col.names = "Mean Sq. Error RF",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
set.seed(1)
rf_e6 <- randomForest(Sales~., data = df2, subset = train, mtry = 6, importance = T)
rf_pred6 <- predict(rf_e6, newdata= testdf2)
kable(mean((rf_pred6 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 6",
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
# rf_e5 <- randomForest(Sales~., data = df2, subset = train, mtry = 5, importance = T)
#
# rf_pred5 <- predict(rf_e5, newdata= testdf2)
#
# kable(mean((rf_pred5 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 5",
#       digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
#
#
# rf_e7 <- randomForest(Sales~., data = df2, subset = train, mtry = 7, importance = T)
#
# rf_pred7 <- predict(rf_e7, newdata= testdf2)
#
# kable(mean((rf_pred7 - test_sales)^2), col.names = "Mean Sq. Error RF, m = 7",
#       digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
mse <- rep(0, 10)
rf_mse <- function(m) {
set.seed(1)
rf_e <-
randomForest(
Sales ~ .,
data = df2,
subset = train,
mtry = m,
importance = T
)
rf_pred <- predict(rf_e, newdata = testdf2)
return(mean((rf_pred - test_sales) ^ 2))
}
for (i in c(1:10)){
mse[i] <- rf_mse(i)
}
mse <- cbind (c(1:10), mse)
kable(mse, col.names = c("M", "Mean Sq. Error RF"),
digits = 2) %>% kable_styling(bootstrap_options = "striped", full_width = F)
library(tidyverse)
library(tidyverse)
library(haven)
source('G:/My Drive/Ivan/College/2018-2019/ECON 712/PS2/PS2.R', echo=TRUE)
# 1a
df$index
View(df)
# 1a
df1a <- df %>%
group_by(index) %>%
mutate_at(vars(ldsal:ldinv), funs(.-lag(.)))
View(df1a)
df_bal <- df %>%
group_by(index) %>%
filter(n() == 4)
df <- read_dta("GMdata.dta")
df_bal <- df %>%
group_by(index) %>%
filter(n() == 4)
# 1a
df1a <- df %>%
group_by(index) %>%
mutate_at(vars(ldsal:ldinv), funs(.-lag(.))) # take first difference
# 1a
df1a <- df_bal %>%
group_by(index) %>%
mutate_at(vars(ldsal:ldinv), funs(.-lag(.))) # take first difference
df_bal
df <- df %>%
mutate(d357 = if_else(sic3 == 357, 1, 0))
df_bal <- df %>%
group_by(index) %>%
filter(n() == 4)
# 1a
df1a <- df_bal %>%
group_by(index) %>%
mutate_at(vars(ldsal:ldinv), funs(.-lag(.))) # take first difference
lm(ldsal ~ lemp + ldnpt + ldrst + d357, data = df1a)
library(plm)
reg1a <- pgmm(ldsal ~ lemp + ldnpt + ldrst + factor(year) + d357|
lag(lemp, 1:3) + lag(ldnpt, 1:3) + lag(ldrst, 1:3),
data = df_bal)
reg1a <- pgmm(ldsal ~ lemp + ldnpt + ldrst + factor(yr) + d357|
lag(lemp, 1:3) + lag(ldnpt, 1:3) + lag(ldrst, 1:3),
data = df_bal)
reg1a <- pgmm(ldsal ~ lemp + ldnpt + ldrst + factor(yr) + d357|
lag(lemp, 1:3) + lag(ldnpt, 1:3) + lag(ldrst, 1:3),
data = df_bal, effect="individual",model = "twosteps")
library(tidyverse)
library(haven)
library(plm)
setwd('G:/My Drive/Ivan/College/2018-2019/ECON 712/PS2')
df <- read_dta("GMdata.dta")
df <- df %>%
mutate(d357 = if_else(sic3 == 357, 1, 0))
df_bal <- df %>%
group_by(index) %>%
filter(n() == 4)
# 1a
df1a <- df_bal %>%
group_by(index) %>%
mutate_at(vars(ldsal:ldinv), funs(.-lag(.))) # take first difference
reg1a <- pgmm(ldsal ~ lemp + ldnpt + ldrst + factor(yr) + d357|
lag(lemp, 1:3) + lag(ldnpt, 1:3) + lag(ldrst, 1:3),
data = df_bal, effect="individual",model = "twosteps")
# 1a
df1a <- plm.data(df_bal, index = c("index", "yr"))
# 1a
df1a <- pdata.frame(df_bal, index = c("index", "yr"))
reg1a <- pgmm(ldsal ~ lemp + ldnpt + ldrst + factor(yr) + d357 |
lag(lemp, 1:99) + lag(ldnpt, 1:99) + lag(ldrst, 1:99),
data = df1a, effect="individual",model = "twosteps")
reg1a <- pgmm(ldsal ~ lag(lemp,0) + lag(ldnpt,0) + lag(ldrst,0) + factor(yr) + d357 |
lag(lemp, 1:99) + lag(ldnpt, 1:99) + lag(ldrst, 1:99),
data = df1a, effect="individual",model = "twosteps")
# 1a
df1a <- pdata.frame(df_bal, index = c("index"))
reg1a <- pgmm(ldsal ~ lag(lemp,0) + lag(ldnpt,0) + lag(ldrst,0) + factor(yr) + d357 |
lag(lemp, 1:99) + lag(ldnpt, 1:99) + lag(ldrst, 1:99),
data = df1a, effect="individual",model = "twosteps")
debugSource('G:/My Drive/Ivan/College/2018-2019/ECON 712/PS2/PS2.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/ECON 712/PS2/PS2.R', echo=TRUE)
debugSource('G:/My Drive/Ivan/College/2018-2019/ECON 712/PS2/PS2.R', echo=TRUE)
reg1a <- pgmm(dynformula(form), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
form <- ldsal ~ lemp + ldnpt + ldrst + factor(yr) + d357
reg1a <- pgmm(dynformula(form), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
reg1a <- pgmm(dynformula(form, diff.form = list(1,1,1,0,0)), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
reg1a <- pgmm(dynformula(form, diff.form = list(1,1,1,0,0)), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
reg1a <- pgmm(dynformula(form, diff.form = list(1,1,1,0,0,0,0)), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
reg1a <- pgmm(dynformula(form), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
# 1a
df1a <- pdata.frame(df_bal, index = c("index", "year"))
form <- ldsal ~ lemp + ldnpt + ldrst + factor(yr) + d357
reg1a <- pgmm(dynformula(form), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
reg1a <- pgmm( ldsal ~ lemp + ldnpt + ldrst + factor(yr) + d357|
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99),
data = df1a)
reg1a <- pgmm( ldsal ~ lemp + ldnpt + ldrst|
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99),
data = df1a)
summary(reg1a)
reg1a <- pgmm( ldsal ~ lemp + ldnpt + ldrst|
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99),
data = df1a)
reg1a
reg1a <- pgmm( ldsal ~ lemp + ldnpt + ldrst + factor(yr|
data = df1a)
reg1a <- pgmm( ldsal ~ lemp + ldnpt + ldrst + factor(yr)|
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99),
data = df1a)
reg1a <- pgmm(ldsal ~ lemp + ldnpt + ldrst + d357|
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99),
data = df1a)
form <- ldsal ~ lemp + ldnpt + ldrst + d357
form <- ldsal ~ lemp + ldnpt + ldrst + d357
reg1a <- pgmm(dynformula(form, diff.form = list(1,1,1,1,0)), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
reg1a <- pgmm(dynformula(form, diff.form = list(T,T,T,T)), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
form <- ldsal ~ lemp + ldnpt + ldrst
reg1a <- pgmm(dynformula(form, diff.form = list(T,T,T,T)), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
# reg1a <- pgmm(ldsal ~ lemp + ldnpt + ldrst + d357|
#                  lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99),
#                data = df1a)
reg1a
reg1a <- pgmm(dynformula(form, diff.form = list(T,T,T,T,F)), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
form <- ldsal ~ lemp + ldnpt + ldrst + d357
reg1a <- pgmm(dynformula(form, diff.form = list(T,T,T,T,F)), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
form <- ldsal ~ lemp + ldnpt + ldrst
reg1a <- pgmm(dynformula(form), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
# reg1a <- pgmm(ldsal ~ lemp + ldnpt + ldrst + d357|
#                  lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99),
#                data = df1a)
reg1a
reg1a <- pgmm(ldsal ~ lemp + ldnpt + ldrst + d357|
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99),
data = df1a, model = "twosteps")
reg2a <- pgmm(ldsal ~ lemp + ldnpt + ldrst|
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99),
data = df1a, model = "twosteps")
reg2a
reg2a <- pgmm(ldsal ~ lemp + ldnpt + ldrst|
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99),
data = df1a, index = c("index", "yr"), model = "twosteps")
reg2a
reg1a <- pgmm(dynformula(form), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
reg1a
form <- ldsal ~ lemp + ldnpt + ldrst
reg1a <- pgmm(dynformula(form), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
form <- ldsal ~ lemp + ldnpt + ldrst
reg1a <- pgmm(dynformula(form), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
reg1a <- pgmm(dynformula(form, diff.form = list(T,T,T,T)), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
form <- ldsal ~ lemp + ldnpt + ldrst
reg1a <- pgmm(dynformula(form), data = df1a, index = c("index", "yr"),
effect = "individual", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
reg1a
reg2a <- pgmm(ldsal ~ lemp + ldnpt + ldrst|
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99),
data = df1a, index = c("index", "yr"), model = "twosteps")
reg2a
summary(reg2a)
reg1a <- pgmm(dynformula(form), data = df1a, index = c("index", "yr"),
effect = "twoways", model = "twosteps",
gmm.inst = ~lemp + ldnpt + ldrst, lag.gmm = list(c(2,99)))
reg1a
reg2a <- pgmm(ldsal ~ lemp + ldnpt + ldrst|
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99),
data = df1a, index = c("index", "yr"), effect = "twoways", model = "twosteps")
summary(reg2a)
reg2a
summary(reg1a_
summary(reg1a)
summary(reg1a)
res1a <- pgmm(formula1a,
data = df_bal,
effect = "individual",
transformation = "d")
formula1a <- ldsal ~ lemp + ldnpt + ldrst
res1a <- pgmm(formula1a,
data = df_bal,
effect = "individual")
formula1a <- ldsal ~ lemp + ldnpt + ldrst |
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99)
res1a <- pgmm(formula1a,
data = df_bal,
effect = "individual")
# 1a
df1a <- pdata.frame(df_bal, index = c("index", "year"))
res1a <- pgmm(formula1a,
data = df1a,
effect = "individual")
summary(res1a)
res1a
formula1a <- ldsal ~ lemp + ldnpt + ldrst + d357|
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99)
res1a <- pgmm(formula1a,
data = df1a,
effect = "individual")
formula1a <- ldsal ~ lemp + ldnpt + ldrst |
lag(lemp, 2:99) + lag(ldnpt, 2:99) + lag(ldrst, 2:99)
