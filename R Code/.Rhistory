}
eval_g_eq <- function(x) {
constr <- c(x[1] + x[2] - q_1)
grad <- c(1,1)
return(list("constraints" = constr, "jacobian" = grad))
}
#initial values
x0 <- c(0, 0)
lb <- c(0, 0)
ub <- c(1, 1)
local_opts <- list( "algorithm" = "NLOPT_LD_MMA",
"xtol_rel"  = 1.0e-7 )
opts <- list("algorithm" = "NLOPT_LD_AUGLAG",
"xtol_rel" = 1.0e-7,
"local_opts" = local_opts)
res <- nloptr(
x0 = x0,
eval_f = eval_1,
eval_g_eq = eval_g_eq,
lb = lb,
ub = ub,
opts = opts
)
pi = -(res$objective)  #profit is negative of obj value because optim mins
return(c(res$solution, p_2, q_1, pi))
}
d_firm_1_lin(0.2,0.2)
d_firm_1_lin(0.4,0.4)
d_firm_1_lin(0.8,0.8)
# Linear production
k = 0.4 # amount captured if other firm raises price by $1
d_firm_1_lin <- function(w_A, w_B) {
w = w_A
# Bertrand game
p_1 = (1 + w) / (2 - k) # constant marginal cost, assuming w_A = w_B
p_2 = (1 + w) / (2 - k)
q_1 = 1 - p_1 + k * p_2     # Differentiated product Bertrand, substitution param = 0.5
# model input demand
# assume production function is q = x_1 + x_2
eval_1 <- function(x) {
return(list(
"objective" = -(p_1 * (x[1] + x[2]) - w * (x[1] + x[2])),
"gradient" = c(-p_1 + w,-p_1 + w)
))
}
eval_g_eq <- function(x) {
constr <- c(x[1] + x[2] - q_1)
grad <- c(1,1)
return(list("constraints" = constr, "jacobian" = grad))
}
#initial values
x0 <- c(0, 0)
# upper and lower bounds
lb <- c(0, 0)
ub <- c(1, 1)
# optimize
local_opts <- list( "algorithm" = "NLOPT_LD_MMA",
"xtol_rel"  = 1.0e-7 )
opts <- list("algorithm" = "NLOPT_LD_AUGLAG",
"xtol_rel" = 1.0e-7,
"local_opts" = local_opts)
res <- nloptr(
x0 = x0,
eval_f = eval_1,
eval_g_eq = eval_g_eq,
lb = lb,
ub = ub,
opts = opts
)
pi = -(res$objective)  #profit is negative of obj value because optim mins
return(c(res$solution, p_2, q_1, pi))
}
d_firm_1_lin(0.8,0.8)
d_firm_1 <- function(w_1, w_2){
# observe following demand curve: Q = a - b1p1 + b2p2;  b1 > b2
a <- 1
b1 <- 1
b2 <- .5
# firm's production function: (x1x2)^0.5
c <- 2(w_1*w_2)^0.5  # marginal cost
# diff prod. bertrand
p <- (a + c * b1)/(2 * b1 - b2)
q <- b1*(a + c*(b2 - b1))/(2*b1 - b2)
# profit function
pi <- p * q - 2*q*(w_1*w_2)^0.5
return(-pi)
}
out <- optim(c(0.5, 0.5), d_firm_1)
d_firm_1 <- function(w_1, w_2){
# observe following demand curve: Q = a - b1p1 + b2p2;  b1 > b2
a <- 1
b1 <- 1
b2 <- .5
# firm's production function: (x1x2)^0.5
c <- 2*(w_1*w_2)^0.5  # marginal cost
# diff prod. bertrand
p <- (a + c * b1)/(2 * b1 - b2)
q <- b1*(a + c*(b2 - b1))/(2*b1 - b2)
# profit function
pi <- p * q - 2*q*(w_1*w_2)^0.5
return(-pi)
}
out <- optim(c(0.5, 0.5), d_firm_1)
d_firm_1(0.5,0.5)
d_firm_1(0.2,0.5)
d_firm_1(0.2,0.2)
d_firm_1(0,0)
d_firm_1(1,1)
d_firm_1(0.6,0.6)
out <- optim(c(0.4,0.4), d_firm_1)
d_firm_1 <- function(w){
# observe following demand curve: Q = a - b1p1 + b2p2;  b1 > b2
w_1 = w[1]
w_2 = w[2]
a <- 1
b1 <- 1
b2 <- .5
# firm's production function: (x1x2)^0.5
c <- 2*(w_1*w_2)^0.5  # marginal cost
# diff prod. bertrand
p <- (a + c * b1)/(2 * b1 - b2)
q <- b1*(a + c*(b2 - b1))/(2*b1 - b2)
# profit function
pi <- p * q - 2*q*(w_1*w_2)^0.5
return(-pi)
}
out <- optim(c(0.4,0.4), d_firm_1)
d_firm_1 <- function(w){
# observe following demand curve: Q = a - b1p1 + b2p2;  b1 > b2
w_1 = w[1]
w_2 = w[2]
a <- 1
b1 <- 1
b2 <- .5
# firm's production function: (x1x2)^0.5
c <- 2*(w_1*w_2)^0.5  # marginal cost
# diff prod. bertrand
p <- (a + c * b1)/(2 * b1 - b2)
q <- b1*(a + c*(b2 - b1))/(2*b1 - b2)
# profit function
pi <- p * q - 2*q*(w_1*w_2)^0.5
return(-pi)
}
out <- optim(c(0.4,0.4), d_firm_1)
out
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/scratch.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/scratch.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/scratch.R', echo=TRUE)
d_firm_1(c(0.2,0.2))
d_firm_1(c(0.25, 0.5))
d_firm_1(c(0.4, 0.4))
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/upstream_firms.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/upstream_firms.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/upstream_firms.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
d_firm_cd_price(w_1A, w_1B)
d_firm_cd_price(w_2A, w_2B)
d_firm_1_cd_unint(w_1A, w_1B)
max(1 - p_1 + k * p_2, 0)
pi <- p_1 * q_1 - w_A * x_1A - w_B * x_1B
p_1 * q_1 - w_A * x_1A - w_B * x_1B
p_1 * q_1
w_A * x_1A
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
if (integrated == 0){
optim_result <- optim(c(.1,.1), u_firms_unint, method = "BFGS", control = list(maxit = 10000, reltol = 1E-12))
# u_firms_unint(c(0.3,0.3))
x_A <- x_1A + x_2A
x_B <- x_1B + x_2B
w_A <- (w_1A * x_1A + w_2A * x_2A) / x_A
w_B <- (w_1B * x_1B + w_2B * x_2B) / x_B
eq_cd_unint <- c(w_A, w_B, x_A, x_B, p_1, p_2, q_1, q_2) ## TODO: Update weighted average w_A, w_B
}
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
max(1 - p_1 + k * p_2, 0)
# Bertrand game
q_1 <-
max(1 - p_1 + k * p_2, 0)     # Differentiated product Bertrand, subst. param = k
w_A <- offer_A
w_B <- offer_B
x_1A <- a * q_1 * p_1 / w_A     # use cobb-douglass to optimize inputs
x_1B <- b * q_1 * p_1 / w_B
x_1A <- a * q_1 * p_1 / w_A     # use cobb-douglass to optimize inputs
a * q_1 * p_1
w_A = 0.3
2_B = 0.2
w_B = 0.2
x_1A <- a * q_1 * p_1 / w_A     # use cobb-douglass to optimize inputs
x_1B <- b * q_1 * p_1 / w_B
pi <- p_1 * q_1 - w_A * x_1A - w_B * x_1B
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result <- optim(c(0.866,0.866), u_firms_unint, method = "BFGS", control = list(maxit = 10000, reltol = 1E-12))
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/upstream_firms_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
#####################################################################
# 2. Main
#####################################################################
eq <- list(w_A = 0, w_B = 0)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/upstream_firms_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
eq <<- list(w_A = w_A, w_B = w_B, x_A = x_A, x_B = x_B, p_1 = p_1, p_2 = p_2, q_1 = q_1, q_2 = q_2)
eq
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
u_firms_unint(c(0.3,0.3), c(0.3, 0.3))
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
optim_result
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
1.31+1.63
1.31/1.63
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
1/1.25
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
1.14/1.42
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
1.33/1.66
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
# upstream firm offer to downstream firm
w_1A <- 0.5
w_2A <- 0.5
w_1B <- 0.5
w_2B <- 0.5
w_A <- list(w_1A, w_2A)
setwd("G:\\My Drive\\Ivan\\College\\2018-2019\\Indep Study\\R Code")
source("upstream_firms_test.R")
source("downstream_firms_cd_test.R")
k = 0.9 # amount captured if other firm raises price by $1 (cross-price elasticity)
integrated = 0  # is Firm A and Firm 1 vertically integrated
linear = 0  # downstream firm with linear production function
cobb_douglas = 0  # downstream firm with cobb-douglas production function
set.seed(100) #set a random seed
# upstream firm offer to downstream firm
w_1A <- 0.5
w_2A <- 0.5
w_1B <- 0.5
w_2B <- 0.5
w_A <- list(w_1A = w_1A, w_2A = w_2A)
# upstream firm offer to downstream firm
w_1A <- 0.5
w_1B <- 0.5
w_2A <- 0.5
w_2B <- 0.5
w_A <- list(w_1A = w_1A, w_2A = w_2A)
w_B <- list(w_1B = w_1B, w_2B = w_2B)
p_1, p_2 <- d_firm_price(w_A, w_B)
p <- d_firm_price(w_A, w_B)
w_A <- c(w_1A, w_2A)
w_B <- c(w_1B, w_2B)
p <- d_firm_price(w_A, w_B)
#############################################################################
# Unintegrated downstream firms
#############################################################################
d_firm_price <- function(w_A, w_B) {
w_1A <- w_A[1]
w_1B <- w_B[1]
w_2A <- w_A[2]
w_2B <- w_B[2]
p_1 <- list(p_1A = (1 + w_1A)/(2 - k), p_1B = (1 + w_1B)/(2 - k))
p_2 <- list(p_2A = (1 + w_1A)/(2 - k), p_2B = (1 + w_2B)/(2 - k))
return(c(p_1, p_2))
}
# upstream firm offer to downstream firm
w_1A <- 0.5
w_2A <- 0.5
w_1B <- 0.5
w_2B <- 0.5
w_A <- c(w_1A, w_2A)
w_B <- c(w_1B, w_2B)
p <- d_firm_price(w_A, w_B)
k = 0.2 # amount captured if other firm raises price by $1 (cross-price elasticity)
# upstream firm offer to downstream firm
w_1A <- 0.5
w_2A <- 0.5
w_1B <- 0.5
w_2B <- 0.5
w_A <- c(w_1A, w_2A)
w_B <- c(w_1B, w_2B)
p <- d_firm_price(w_A, w_B)
1.5/1.8
# upstream firm offer to downstream firm
w_1A <- 0.6
w_2A <- 0.5
w_1B <- 0.6
w_2B <- 0.5
w_A <- c(w_1A, w_2A)
w_B <- c(w_1B, w_2B)
p <- d_firm_price(w_A, w_B)
# upstream firm offer to downstream firm
w_1A <- 0.6
w_2A <- 0.5
w_1B <- 0.6
w_2B <- 0.5
w_A <- c(w_1A, w_2A)
w_B <- c(w_1B, w_2B)
p <- d_firm_price(w_A, w_B)
# upstream firm offer to downstream firm
w_1A <- 0.6
w_2A <- 0.5
w_2B <- 0.5
w_A <- c(w_1A, w_2A)
w_1B <- 0.6
w_B <- c(w_1B, w_2B)
p <- d_firm_price(w_A, w_B)
#############################################################################
# Unintegrated downstream firms
#############################################################################
d_firm_price <- function(w_A, w_B) {
w_1A <- w_A[1]
w_1B <- w_B[1]
w_2A <- w_A[2]
w_2B <- w_B[2]
p_1 <- list(p_1A = (1 + w_1A)/(2 - k), p_1B = (1 + w_1B)/(2 - k))
p_2 <- list(p_2A = (1 + w_2A)/(2 - k), p_2B = (1 + w_2B)/(2 - k))
return(c(p_1, p_2))
}
# upstream firm offer to downstream firm
w_1A <- 0.6
w_2A <- 0.5
w_1B <- 0.6
w_2B <- 0.5
w_A <- c(w_1A, w_2A)
w_B <- c(w_1B, w_2B)
View(p)
cons_demand <- function(p, x){
beta = c(1, 1)
alpha = c(1,1)
firm_1_p <- c(p[1], p[2])
firm_2_p <- c(p[3], p[4])
firm_1_x <- c(x[1], x[2])
firm_2_x <- c(x[3], x[4])
odds_1 <- exp(t(firm_1_x) %*% beta + t(firm_1_p) %*% alpha)
odds_2 <- exp(t(firm_2_x) %*% beta + t(firm_2_p) %*% alpha)
prob_1 <- odds_1 / (1 + odds_1 + odds_2)
prob_2 <- odds_2 / (1 + odds_1 + odds_2)
return(c(prob_1, prob_2))
}
cons_demand(c(1,1,1,1), c(0.5,0.5,0.5,0.5))
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/consumer_logit_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/consumer_logit_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/consumer_logit_test.R', echo=TRUE)
