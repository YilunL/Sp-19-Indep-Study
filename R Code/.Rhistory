# observe following demand curve: Q = a - b1p1 + b2p2;  b1 > b2
w_1 = w[1]
w_2 = w[2]
a <- 1
b1 <- 1
b2 <- .5
# firm's production function: (x1x2)^0.5
c <- 2*(w_1*w_2)^0.5  # marginal cost
# diff prod. bertrand
p <- (a + c * b1)/(2 * b1 - b2)
q <- b1*(a + c*(b2 - b1))/(2*b1 - b2)
# profit function
pi <- p * q - 2*q*(w_1*w_2)^0.5
return(-pi)
}
out <- optim(c(0.4,0.4), d_firm_1)
d_firm_1 <- function(w){
# observe following demand curve: Q = a - b1p1 + b2p2;  b1 > b2
w_1 = w[1]
w_2 = w[2]
a <- 1
b1 <- 1
b2 <- .5
# firm's production function: (x1x2)^0.5
c <- 2*(w_1*w_2)^0.5  # marginal cost
# diff prod. bertrand
p <- (a + c * b1)/(2 * b1 - b2)
q <- b1*(a + c*(b2 - b1))/(2*b1 - b2)
# profit function
pi <- p * q - 2*q*(w_1*w_2)^0.5
return(-pi)
}
out <- optim(c(0.4,0.4), d_firm_1)
out
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/scratch.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/scratch.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/scratch.R', echo=TRUE)
d_firm_1(c(0.2,0.2))
d_firm_1(c(0.25, 0.5))
d_firm_1(c(0.4, 0.4))
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/consumer_logit_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
print(x)
print(eq_pi)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
u_firm_int(c(1,1), c(1,1))
u_firm_unint(c(1,1), c(1,1))
u_firm_unint(c(1,1), c(1,1))
#####################################################################
# 1. Preliminaries
#####################################################################
setwd("G:\\My Drive\\Ivan\\College\\2018-2019\\Indep Study\\R Code")
source("upstream_firms.R")
source("downstream_firms.R")
source("consumer_logit.R")
integrated = 0  # is Firm A and Firm 1 vertically integrated
linear = 0  # downstream firm with linear production function
cobb_douglas = 0  # downstream firm with cobb-douglas production function
down_mc_1 <- 0  # downstream marginal cost for firm 1
down_mc_2 <- 0   # downstream marginal cost for firm 2
ineff <- 0  # fixed loss of integration (Hart and Tirole 1990)
m_ineff <- 0 * integrated # increase in MC due to integration (unimplemented)
foreclosure <- 0 * integrated # dummy to see if firms 1-A stops selling to firm 2 (unimplemented)
M = 1  # market size
set.seed(100) #set a random seed
#####################################################################
# 2. Main
#####################################################################
# eq profits
pi_A <- 0  #upstream A
pi_B <- 0  #upstream B
pi_1 <- 0  #downstream 1
pi_2 <- 0  #downstream 2
eq_pi <- list(
pi_A = pi_A,
pi_B = pi_B,
pi_1 = pi_1,
pi_2 = pi_2
)
# firms specific intermediate demads
x_1A <- 0  # downstream firm 1's demand for intermediate good A
x_2A <- 0  # downstream firm 2's demand for intermediate good A
x_1B <- 0  # downstream firm 1's demand for intermediate good B
x_2B <- 0  # downstream firm 2's demand for intermediate good B
eq_int_good <-
list(
w_1A = 2, # initial guess for intermediate good costs
w_1B = 2,
w_2A = 2,
w_2B = 2,
x_1A = x_1A,
x_1B = x_1B,
x_2A = x_2A,
x_2B = x_2B
)
eq_downstream_p <-
list(
p_1A = 4,  # initial guess for downstream prices
p_1B = 4,
p_2A = 4,
p_2B = 4
)
iter = 0
out_tol = 1
optim_A = 0
nruns = 4
u_firm_unint(c(1,1), c(1,1))
downstream_iter = 0
u_firm_unint(c(1,1), c(1,1))
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
u_firm_unint(c(1,1), c(1,1))
u_firm_unint(c(1,1), c(1,1))
u_firm_unint(c(1,1), c(1,1))
_2B
)
eq_downstream
eq_downstream_p <-
list(
p_1A = 4,  # initial guess for downstream prices
p_1B = 4,
p_2A = 4,
p_2B = 4
)
eq_int_good <-
list(
w_1A = 2, # initial guess for intermediate good costs
w_1B = 2,
w_2A = 2,
w_2B = 2,
x_1A = x_1A,
x_1B = x_1B,
x_2A = x_2A,
x_2B = x_2B
)
u_firm_unint(c(1,1), c(1,1))
firm_A_optim <-
optim(
par = c(eq_int_good$w_1A, eq_int_good$w_2A),
fn = u_firm_unint,
w_B = c(eq_int_good$w_1B, eq_int_good$w_2B),
method = "BFGS",
control = list(maxit = 100000, reltol = 1E-12)
)
#####################################################################
# 1. Preliminaries
#####################################################################
setwd("G:\\My Drive\\Ivan\\College\\2018-2019\\Indep Study\\R Code")
source("upstream_firms.R")
source("downstream_firms.R")
source("consumer_logit.R")
integrated = 0  # is Firm A and Firm 1 vertically integrated
cobb_douglas = 0  # downstream firm with cobb-douglas production function
linear = 0  # downstream firm with linear production function
down_mc_1 <- 0  # downstream marginal cost for firm 1
down_mc_2 <- 0   # downstream marginal cost for firm 2
ineff <- 0  # fixed loss of integration (Hart and Tirole 1990)
m_ineff <- 0 * integrated # increase in MC due to integration (unimplemented)
foreclosure <- 0 * integrated # dummy to see if firms 1-A stops selling to firm 2 (unimplemented)
M = 1  # market size
set.seed(100) #set a random seed
#####################################################################
# 2. Main
#####################################################################
# eq profits
pi_A <- 0  #upstream A
pi_1 <- 0  #downstream 1
pi_2 <- 0  #downstream 2
pi_B <- 0  #upstream B
eq_pi <- list(
pi_A = pi_A,
pi_B = pi_B,
pi_1 = pi_1,
pi_2 = pi_2
)
# firms specific intermediate demads
x_1A <- 0  # downstream firm 1's demand for intermediate good A
x_2A <- 0  # downstream firm 2's demand for intermediate good A
x_1B <- 0  # downstream firm 1's demand for intermediate good B
x_2B <- 0  # downstream firm 2's demand for intermediate good B
eq_int_good <-
list(
w_1A = 2, # initial guess for intermediate good costs
w_1B = 2,
w_2A = 2,
w_2B = 2,
x_1A = x_1A,
x_1B = x_1B,
x_2A = x_2A,
x_2B = x_2B
)
eq_downstream_p <-
list(
p_1A = 4,  # initial guess for downstream prices
p_1B = 4,
p_2A = 4,
p_2B = 4
)
iter = 0
out_tol = 1
optim_A = 0
nruns = 4
downstream_iter = 0
old_dist <- sqrt(pi_A_old ^ 2 + pi_B_old ^ 2)
pi_A_old <- eq_pi$pi_A # keeping tabs on old profits
pi_B_old <- eq_pi$pi_B
optim_A = 1 - optim_A  # optimizing which upstream firm's offer
# optimize firm A given firm B prices are fixed
if (optim_A == 1) {
firm_A_optim <-
optim(
par = c(eq_int_good$w_1A, eq_int_good$w_2A),
fn = u_firm_unint,
w_B = c(eq_int_good$w_1B, eq_int_good$w_2B),
method = "BFGS",
control = list(maxit = 100000, reltol = 1E-12)
)
eq_int_good$w_1A <- firm_A_optim$par[1]
eq_int_good$w_2A <- firm_A_optim$par[2]
new_dist = sqrt(eq_pi$pi_A ^ 2 + eq_pi$pi_B ^ 2)
out_tol = abs(1 - new_dist / old_dist)
} else {
firm_B_optim <-
optim(
par = c(eq_int_good$w_1B, eq_int_good$w_2B),
fn = u_firm_unint,
w_A = c(eq_int_good$w_1A, eq_int_good$w_2A),
method = "BFGS",
control = list(maxit = 100000, reltol = 1E-12)
)
eq_int_good$w_1B <- firm_B_optim$par[1]
eq_int_good$w_2B <- firm_B_optim$par[2]
new_dist = sqrt(eq_pi$pi_A ^ 2 + eq_pi$pi_B ^ 2)
out_tol = abs(1 - new_dist / old_dist)
}
pi_A_old <- eq_pi$pi_A # keeping tabs on old profits
pi_B_old <- eq_pi$pi_B
old_dist <- sqrt(pi_A_old ^ 2 + pi_B_old ^ 2)
#####################################################################
# 1. Preliminaries
#####################################################################
setwd("G:\\My Drive\\Ivan\\College\\2018-2019\\Indep Study\\R Code")
source("upstream_firms.R")
source("downstream_firms.R")
source("consumer_logit.R")
integrated = 0  # is Firm A and Firm 1 vertically integrated
linear = 0  # downstream firm with linear production function
cobb_douglas = 0  # downstream firm with cobb-douglas production function
down_mc_1 <- 0  # downstream marginal cost for firm 1
down_mc_2 <- 0   # downstream marginal cost for firm 2
ineff <- 0  # fixed loss of integration (Hart and Tirole 1990)
m_ineff <- 0 * integrated # increase in MC due to integration (unimplemented)
foreclosure <- 0 * integrated # dummy to see if firms 1-A stops selling to firm 2 (unimplemented)
M = 1  # market size
set.seed(100) #set a random seed
#####################################################################
# 2. Main
#####################################################################
# eq profits
pi_A <- 0  #upstream A
pi_B <- 0  #upstream B
pi_1 <- 0  #downstream 1
pi_2 <- 0  #downstream 2
eq_pi <- list(
pi_A = pi_A,
pi_B = pi_B,
pi_1 = pi_1,
pi_2 = pi_2
)
# firms specific intermediate demads
x_1A <- 0  # downstream firm 1's demand for intermediate good A
x_2A <- 0  # downstream firm 2's demand for intermediate good A
x_1B <- 0  # downstream firm 1's demand for intermediate good B
x_2B <- 0  # downstream firm 2's demand for intermediate good B
eq_int_good <-
list(
w_1A = 2, # initial guess for intermediate good costs
w_1B = 2,
w_2A = 2,
w_2B = 2,
x_1A = x_1A,
x_1B = x_1B,
x_2A = x_2A,
x_2B = x_2B
)
eq_downstream_p <-
list(
p_1A = 4,  # initial guess for downstream prices
p_1B = 4,
p_2A = 4,
p_2B = 4
)
iter = 0
out_tol = 1
optim_A = 0
nruns = 4
#####################################################################
# 1. Preliminaries
#####################################################################
setwd("G:\\My Drive\\Ivan\\College\\2018-2019\\Indep Study\\R Code")
source("upstream_firms.R")
source("downstream_firms.R")
source("consumer_logit.R")
integrated = 0  # is Firm A and Firm 1 vertically integrated
linear = 0  # downstream firm with linear production function
cobb_douglas = 0  # downstream firm with cobb-douglas production function
down_mc_1 <- 0  # downstream marginal cost for firm 1
down_mc_2 <- 0   # downstream marginal cost for firm 2
ineff <- 0  # fixed loss of integration (Hart and Tirole 1990)
m_ineff <- 0 * integrated # increase in MC due to integration (unimplemented)
foreclosure <- 0 * integrated # dummy to see if firms 1-A stops selling to firm 2 (unimplemented)
M = 1  # market size
set.seed(100) #set a random seed
#####################################################################
# 2. Main
#####################################################################
# eq profits
pi_A <- 0  #upstream A
pi_B <- 0  #upstream B
pi_1 <- 0  #downstream 1
pi_2 <- 0  #downstream 2
eq_pi <- list(
pi_A = pi_A,
pi_B = pi_B,
pi_1 = pi_1,
pi_2 = pi_2
)
# firms specific intermediate demads
x_1A <- 0  # downstream firm 1's demand for intermediate good A
x_2A <- 0  # downstream firm 2's demand for intermediate good A
x_1B <- 0  # downstream firm 1's demand for intermediate good B
x_2B <- 0  # downstream firm 2's demand for intermediate good B
eq_int_good <-
list(
w_1A = 2, # initial guess for intermediate good costs
w_1B = 2,
w_2A = 2,
w_2B = 2,
x_1A = x_1A,
x_1B = x_1B,
x_2A = x_2A,
x_2B = x_2B
)
eq_downstream_p <-
list(
p_1A = 4,  # initial guess for downstream prices
p_1B = 4,
p_2A = 4,
p_2B = 4
)
iter = 0
out_tol = 1
optim_A = 0
nruns = 4
#       out_tol_limit = 1E-9
#     } else if (run == 3) {
#       out_tol_limit = 1E-8
#     } else {
#       out_tol_limit = 1E-7
#     }
#
#     downstream_iter = 0
#
#     while ((out_tol > out_tol_limit) & (downstream_iter < 100000)) {
iter = iter + 1  # count iterations
optim_A = 1 - optim_A  # optimizing which upstream firm's offer
pi_A_old <- eq_pi$pi_A # keeping tabs on old profits
pi_B_old <- eq_pi$pi_B
old_dist <- sqrt(pi_A_old ^ 2 + pi_B_old ^ 2)
source("upstream_firms.R")
source("downstream_firms.R")
source("consumer_logit.R")
# optimize firm A given firm B prices are fixed
if (optim_A == 1) {
firm_A_optim <-
optim(
par = c(eq_int_good$w_1A, eq_int_good$w_2A),
fn = u_firm_unint,
w_B = c(eq_int_good$w_1B, eq_int_good$w_2B),
method = "BFGS",
control = list(maxit = 100000, reltol = 1E-12)
)
eq_int_good$w_1A <- firm_A_optim$par[1]
eq_int_good$w_2A <- firm_A_optim$par[2]
new_dist = sqrt(eq_pi$pi_A ^ 2 + eq_pi$pi_B ^ 2)
out_tol = abs(1 - new_dist / old_dist)
} else {
firm_B_optim <-
optim(
par = c(eq_int_good$w_1B, eq_int_good$w_2B),
fn = u_firm_unint,
w_A = c(eq_int_good$w_1A, eq_int_good$w_2A),
method = "BFGS",
control = list(maxit = 100000, reltol = 1E-12)
)
eq_int_good$w_1B <- firm_B_optim$par[1]
eq_int_good$w_2B <- firm_B_optim$par[2]
new_dist = sqrt(eq_pi$pi_A ^ 2 + eq_pi$pi_B ^ 2)
out_tol = abs(1 - new_dist / old_dist)
}
#     if (run == 1) {
#       out_tol_limit = 1E-10
#     } else if (run == 2) {
#       out_tol_limit = 1E-9
#     } else if (run == 3) {
#       out_tol_limit = 1E-8
#     } else {
#       out_tol_limit = 1E-7
#     }
#
downstream_iter = 0
#     if (run == 1) {
#       out_tol_limit = 1E-10
#     } else if (run == 2) {
#       out_tol_limit = 1E-9
#     } else if (run == 3) {
#       out_tol_limit = 1E-8
#     } else {
#       out_tol_limit = 1E-7
#     }
#
downstream_iter = 0
# optimize firm A given firm B prices are fixed
if (optim_A == 1) {
firm_A_optim <-
optim(
par = c(eq_int_good$w_1A, eq_int_good$w_2A),
fn = u_firm_unint,
w_B = c(eq_int_good$w_1B, eq_int_good$w_2B),
method = "BFGS",
control = list(maxit = 100000, reltol = 1E-12)
)
eq_int_good$w_1A <- firm_A_optim$par[1]
eq_int_good$w_2A <- firm_A_optim$par[2]
new_dist = sqrt(eq_pi$pi_A ^ 2 + eq_pi$pi_B ^ 2)
out_tol = abs(1 - new_dist / old_dist)
} else {
firm_B_optim <-
optim(
par = c(eq_int_good$w_1B, eq_int_good$w_2B),
fn = u_firm_unint,
w_A = c(eq_int_good$w_1A, eq_int_good$w_2A),
method = "BFGS",
control = list(maxit = 100000, reltol = 1E-12)
)
eq_int_good$w_1B <- firm_B_optim$par[1]
eq_int_good$w_2B <- firm_B_optim$par[2]
new_dist = sqrt(eq_pi$pi_A ^ 2 + eq_pi$pi_B ^ 2)
out_tol = abs(1 - new_dist / old_dist)
}
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/main.R', echo=TRUE)
