c <- 2*(w_1*w_2)^0.5  # marginal cost
# diff prod. bertrand
p <- (a + c * b1)/(2 * b1 - b2)
q <- b1*(a + c*(b2 - b1))/(2*b1 - b2)
# profit function
pi <- p * q - 2*q*(w_1*w_2)^0.5
return(-pi)
}
out <- optim(c(0.4,0.4), d_firm_1)
out
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/scratch.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/scratch.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/scratch.R', echo=TRUE)
d_firm_1(c(0.2,0.2))
d_firm_1(c(0.25, 0.5))
d_firm_1(c(0.4, 0.4))
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/consumer_logit_test.R', echo=TRUE)
d_firm_prob(c(1,1), c(0.4, 0.4))
#############################################################################
# Unintegrated downstream firms
#############################################################################
d_firm_price <- function(w_A, w_B) {
w_1A <- w_A[1]
w_1B <- w_B[1]
w_2A <- w_A[2]
w_2B <- w_B[2]
p_1 <- list(p_1A = (1 + w_1A)/(2 - k), p_1B = (1 + w_1B)/(2 - k))
p_2 <- list(p_2A = (1 + w_2A)/(2 - k), p_2B = (1 + w_2B)/(2 - k))
return(c(p_1, p_2))
}
d_firm_prob <- function(p, x){
odds <- cons_demand(p, x)
return(prob)
}
d_firm_1 <- function(w, p, x, odds) {
w_A <- w[1]
w_B <- w[2]
p_A <- p[1]
p_B <- p[2]
x_A <- x[1]
x_B <- x[2]
odds_1 <- odds[1]
odds_2 <- odds[2]
prob <- odds_1 / (1 + odds_1 + odds_2)
pi <- prob * (p_1 + p_2) - (w_A*x_A + w_B*x_B)
return(-pi)
}
d_firm_prob(c(1,1), c(0.4, 0.4))
d_firm_prob <- function(p, x){
odds <- cons_demand(p, x)
return(odds)
}
d_firm_prob(c(1,1), c(0.4, 0.4))
cons_demand(c(1,1), c(0.5,0.5))
cons_demand <- function(p, x){
beta = c(1, 1)
alpha = c(0.5,0.5)
# firm_1_p <- c(p[1], p[2])
# firm_2_p <- c(p[3], p[4])
# firm_1_x <- c(x[1], x[2])
# firm_2_x <- c(x[3], x[4])
# odds_1 <- exp(t(firm_1_x) %*% beta - t(firm_1_p) %*% alpha)
# odds_2 <- exp(t(firm_2_x) %*% beta - t(firm_2_p) %*% alpha)
# prob_1 <- odds_1 / (1 + odds_1 + odds_2)
# prob_2 <- odds_2 / (1 + odds_1 + odds_2)
# return(c(prob_1, prob_2))
odds <- exp(t(x) %*% beta - t(p) %*% alpha)
return(odds)
}
cons_demand(c(1,1), c(0.5,0.5))
cons_demand(c(.8,.8), c(0.5,0.5))
d_firm_prob(c(1,1), c(0.4, 0.4))
d_firm_1(c(0.4, 0.4), c(0.6, 0.6), c(1, 1), c(1.2, 1.2))
d_firm_1 <- function(w, p, x, odds) {
w_A <- w[1]
w_B <- w[2]
p_A <- p[1]
p_B <- p[2]
x_A <- x[1]
x_B <- x[2]
odds_1 <- odds[1]
odds_2 <- odds[2]
prob <- odds_1 / (1 + odds_1 + odds_2)
pi <- prob * (p_A + p_A) - (w_A*x_A + w_B*x_B)
return(-pi)
}
d_firm_2 <- function(w, p, x, odds) {
w_A <- w[1]
w_B <- w[2]
p_A <- p[1]
p_B <- p[2]
x_A <- x[1]
x_B <- x[2]
odds_1 <- odds[1]
odds_2 <- odds[2]
prob <- odds_2 / (1 + odds_1 + odds_2)
pi <- prob * (p_A + p_A) - (w_A*x_A + w_B*x_B)
return(-pi)
}
d_firm_1(c(0.4, 0.4), c(0.6, 0.6), c(1, 1), c(1.2, 1.2))
d_firm_1 <- function(w, p, x, odds) {
w_A <- w[1]
w_B <- w[2]
p_A <- p[1]
p_B <- p[2]
x_A <- x[1]
x_B <- x[2]
odds_1 <- odds[1]
odds_2 <- odds[2]
prob <- odds_1 / (1 + odds_1 + odds_2)
pi <- prob * (p_A + p_B) - (w_A*x_A + w_B*x_B)
return(pi)
}
d_firm_2 <- function(w, p, x, odds) {
w_A <- w[1]
w_B <- w[2]
p_A <- p[1]
p_B <- p[2]
x_A <- x[1]
x_B <- x[2]
odds_1 <- odds[1]
odds_2 <- odds[2]
prob <- odds_2 / (1 + odds_1 + odds_2)
pi <- prob * (p_A + p_B) - (w_A*x_A + w_B*x_B)
return(-pi)
}
d_firm_1(c(0.4, 0.4), c(0.6, 0.6), c(1, 1), c(1.2, 1.2))
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/downstream_firms_cd_test.R', echo=TRUE)
d_firm_1(c(0.4, 0.4), c(0.6, 0.6), c(0.3, 0.3), c(1.2, 1.2))
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/downstream_firms_cd_test.R', echo=TRUE)
d_firm_1 <- function(w, p, x, odds) {
w_A <- w[1]
w_B <- w[2]
p_A <- p[1]
p_B <- p[2]
x_A <- x[1]
x_B <- x[2]
odds_1 <- odds[1]
odds_2 <- odds[2]
prob <- odds_1 / (1 + odds_1 + odds_2)
pi <- prob * (p_A + p_B) - (w_A*x_A + w_B*x_B)
return(-pi)
}
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
optim_result
#####################################################################
# 2a. Downstream production - complete information
#####################################################################
c(eq_int_good[1:4])
eq_int_good <-
list(
w_1A = 1,
w_2A = 1,
w_1B = .2,
w_2B = .2,
x_1A = x_1A,
x_2A = x_2A,
x_1B = x_1B,
x_2B = x_2B
)
#####################################################################
# 2a. Downstream production - complete information
#####################################################################
c(eq_int_good[1:4])
#####################################################################
# 2a. Downstream production - complete information
#####################################################################
flatten(c(eq_int_good[1:4]))
#####################################################################
# 2a. Downstream production - complete information
#####################################################################
unlist(eq_int_good[1:4])
u_firms_unint(unlist(eq_int_good[1:4]))
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
w_A <- unlist(eq_int_good[1:2])
w_B <- unlist(eq_int_good[3:4])
# offer by firm A to downstream firm 1
w_1A <- w_A[1]
# offer by firm A to downstream firm 2
w_2A <- w_A[2]
# offer by firm B to downstream firm 1
w_1B <- w_B[1]
w_A <- unlist(eq_int_good[1:2])
w_B <- unlist(eq_int_good[3:4])
# offer by firm A to downstream firm 1
w_1A <- w_A[1]
# offer by firm A to downstream firm 2
w_2A <- w_A[2]
# offer by firm B to downstream firm 1
w_1B <- w_B[1]
w_A <- unlist(eq_int_good[1:2])
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
w_A <- unlist(eq_int_good[1:2])
w_B <- unlist(eq_int_good[3:4])
# offer by firm A to downstream firm 1
w_1A <- w_A[1]
# offer by firm A to downstream firm 2
w_2A <- w_A[2]
# offer by firm B to downstream firm 1
w_1B <- w_B[1]
# offer by firm B to downstream firm 2
w_2B <- w_B[2]
# cobb-douglas production in downstream
if (cobb_douglas == 1) {
# downstream firms set prices given their inputs
p_1 <- d_firm_cd_price(w_1A, w_1B)
p_2 <- d_firm_cd_price(w_2A, w_2B)
# seeing prices, downstream firms produce (or don't)
downstream1 <- d_firm_1_cd_unint(w_1A, w_1B, c(p_1, p_2))
downstream2 <- d_firm_2_cd(w_2A, w_2B, c(p_1, p_2))
}
# downstream outputs
q_1 <- downstream1[3]
q_2 <- downstream2[3]
# downstream input demands (if rejected)
x_1A <- downstream1[1]
x_1B <- downstream1[2]
x_2A <- downstream2[1]
x_2B <- downstream2[2]
# profits
pi_A <- w_1A * x_1A + w_2A * x_2A # profits
pi_B <- w_1B * x_1B + w_2B * x_2B # profits
pi_1 <- downstream1[4]
pi_2 <- downstream2[4]
# aggregate intermediate good price and output
x_A = x_1A + x_2A
x_B = x_1B + x_2B
w_A = (w_1A * x_1A + w_2A * x_2A) / x_A
w_B = (w_1B * x_1B + w_2B * x_2B) / x_B
eq <<-
list(
x_A = x_A,
x_B = x_B,
w_A = w_A,
w_B = w_B,
p_1 = p_1,
p_2 = p_2,
q_1 = q_1,
q_2 = q_2
)
eq_pi <<- list(
pi_A = pi_A,
pi_B = pi_B,
pi_1 = pi_1,
pi_2 = pi_2
)
eq_int_good <<-
list(
w_1A = w_1A,
w_2A = w_2A,
w_1B = w_1B,
w_2B = w_2B,
x_1A = x_1A,
x_2A = x_2A,
x_1B = x_1B,
x_2B = x_2B
)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/downstream_firms_cd_test.R', echo=TRUE)
w_A <- unlist(eq_int_good[1:2])
w_B <- unlist(eq_int_good[3:4])
# offer by firm A to downstream firm 1
w_1A <- w_A[1]
# offer by firm A to downstream firm 2
w_2A <- w_A[2]
# offer by firm B to downstream firm 1
w_1B <- w_B[1]
# offer by firm B to downstream firm 2
w_2B <- w_B[2]
# cobb-douglas production in downstream
if (cobb_douglas == 1) {
# downstream firms set prices given their inputs
p_1 <- d_firm_cd_price(w_1A, w_1B)
p_2 <- d_firm_cd_price(w_2A, w_2B)
# seeing prices, downstream firms produce (or don't)
downstream1 <- d_firm_1_cd_unint(w_1A, w_1B, c(p_1, p_2))
downstream2 <- d_firm_2_cd(w_2A, w_2B, c(p_1, p_2))
}
# downstream outputs
q_1 <- downstream1[3]
q_2 <- downstream2[3]
# downstream input demands (if rejected)
x_1A <- downstream1[1]
x_1B <- downstream1[2]
x_2A <- downstream2[1]
x_2B <- downstream2[2]
# profits
pi_A <- w_1A * x_1A + w_2A * x_2A # profits
pi_B <- w_1B * x_1B + w_2B * x_2B # profits
pi_1 <- downstream1[4]
pi_2 <- downstream2[4]
# aggregate intermediate good price and output
x_A = x_1A + x_2A
x_B = x_1B + x_2B
w_A = (w_1A * x_1A + w_2A * x_2A) / x_A
w_B = (w_1B * x_1B + w_2B * x_2B) / x_B
eq <<-
list(
x_A = x_A,
x_B = x_B,
w_A = w_A,
w_B = w_B,
p_1 = p_1,
p_2 = p_2,
q_1 = q_1,
q_2 = q_2
)
eq_pi <<- list(
pi_A = pi_A,
pi_B = pi_B,
pi_1 = pi_1,
pi_2 = pi_2
)
eq_int_good <<-
list(
w_1A = w_1A,
w_2A = w_2A,
w_1B = w_1B,
w_2B = w_2B,
x_1A = x_1A,
x_2A = x_2A,
x_1B = x_1B,
x_2B = x_2B
)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
u_firms_unint(unlist(eq_int_good[1:2]), unlist(eq_int_good[3:4]))
optim(
par = c(eq_int_good$w_1A, eq_int_good$w_2A),  # optimizing A's offer
fn = u_firms_unint,
w_B = c(eq_int_good$w_1B, eq_int_good$w_2B),  # B's fixed offer
method = "BFGS",
control = list(maxit = 10000, reltol = 1E-12)
)
optim(
par = c(eq_int_good$w_1B, eq_int_good$w_2B),
fn = u_firms_unint,
w_A = c(eq_int_good$w_1A, eq_int_good$w_2A),
method = "BFGS",
control = list(maxit = 10000, reltol = 1E-12)
)
eq_int_good <-
list(
w_1A = 0.5,
w_2A = 0.5,
w_1B = 0.5,
w_2B = 0.5,
x_1A = x_1A,
x_2A = x_2A,
x_1B = x_1B,
x_2B = x_2B
)
#####################################################################
# 2a. Downstream production - complete information
#####################################################################
unlist(eq_int_good[1:4])
optim(
par = c(eq_int_good$w_1A, eq_int_good$w_2A),  # optimizing A's offer
fn = u_firms_unint,
w_B = c(eq_int_good$w_1B, eq_int_good$w_2B),  # B's fixed offer
method = "BFGS",
control = list(maxit = 10000, reltol = 1E-12)
)
optim(
par = c(eq_int_good$w_1B, eq_int_good$w_2B),
fn = u_firms_unint,
w_A = c(eq_int_good$w_1A, eq_int_good$w_2A),
method = "BFGS",
control = list(maxit = 10000, reltol = 1E-12)
)
eq_int_good <-
list(
w_1A = 0.2,
w_2A = 0.2,
w_1B = 0.2,
w_2B = 0.2,
x_1A = x_1A,
x_2A = x_2A,
x_1B = x_1B,
x_2B = x_2B
)
#####################################################################
# 2a. Downstream production - complete information
#####################################################################
unlist(eq_int_good[1:4])
optim(
par = c(eq_int_good$w_1A, eq_int_good$w_2A),  # optimizing A's offer
fn = u_firms_unint,
w_B = c(eq_int_good$w_1B, eq_int_good$w_2B),  # B's fixed offer
method = "BFGS",
control = list(maxit = 10000, reltol = 1E-12)
)
optim(
par = c(eq_int_good$w_1B, eq_int_good$w_2B),
fn = u_firms_unint,
w_A = c(eq_int_good$w_1A, eq_int_good$w_2A),
method = "BFGS",
control = list(maxit = 10000, reltol = 1E-12)
)
eq_int_good <-
list(
w_1A = 0.3,
w_2A = 0.3,
w_1B = 0.3,
w_2B = 0.3,
x_1A = x_1A,
x_2A = x_2A,
x_1B = x_1B,
x_2B = x_2B
)
#####################################################################
# 2a. Downstream production - complete information
#####################################################################
unlist(eq_int_good[1:4])
optim(
par = c(eq_int_good$w_1A, eq_int_good$w_2A),  # optimizing A's offer
fn = u_firms_unint,
w_B = c(eq_int_good$w_1B, eq_int_good$w_2B),  # B's fixed offer
method = "BFGS",
control = list(maxit = 10000, reltol = 1E-12)
)
optim(
par = c(eq_int_good$w_1B, eq_int_good$w_2B),
fn = u_firms_unint,
w_A = c(eq_int_good$w_1A, eq_int_good$w_2A),
method = "BFGS",
control = list(maxit = 10000, reltol = 1E-12)
)
optim(
par = c(eq_int_good$w_1A, eq_int_good$w_2A),  # optimizing A's offer
fn = u_firms_unint,
w_B = c(eq_int_good$w_1B, eq_int_good$w_2B),  # B's fixed offer
method = "Nelder-Mead",
control = list(maxit = 10000, reltol = 1E-12)
)
eq_int_good <-
list(
w_1A = 0.3,
w_2A = 0.3,
w_1B = 0.3,
w_2B = 0.3,
x_1A = x_1A,
x_2A = x_2A,
x_1B = x_1B,
x_2B = x_2B
)
optim(
par = c(eq_int_good$w_1A, eq_int_good$w_2A),  # optimizing A's offer
fn = u_firms_unint,
w_B = c(eq_int_good$w_1B, eq_int_good$w_2B),  # B's fixed offer
method = "Nelder-Mead",
control = list(maxit = 10000, reltol = 1E-12)
)
optim(
par = c(eq_int_good$w_1B, eq_int_good$w_2B),
fn = u_firms_unint,
w_A = c(eq_int_good$w_1A, eq_int_good$w_2A),
method = "Nelder-Mead",
control = list(maxit = 10000, reltol = 1E-12)
)
eq_int_good <-
list(
w_1A = 0.3,
w_2A = 0.3,
w_1B = 0.3,
w_2B = 0.3,
x_1A = x_1A,
x_2A = x_2A,
x_1B = x_1B,
x_2B = x_2B
)
u_firms_unint(unlist(eq_int_good[1:2]), unlist(eq_int_good[3:4]))
eq_int_good <-
list(
w_1A = 0.833333,
w_2A = 0.833333,
w_1B = 0.3,
w_2B = 0.3,
x_1A = x_1A,
x_2A = x_2A,
x_1B = x_1B,
x_2B = x_2B
)
#####################################################################
# 2a. Downstream production - complete information
#####################################################################
unlist(eq_int_good[1:4])
u_firms_unint(unlist(eq_int_good[1:2]), unlist(eq_int_good[3:4]))
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
u_firms_unint(unlist(eq_int_good[1:2]), unlist(eq_int_good[3:4]))
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
u_firms_unint(unlist(eq_int_good[1:2]), unlist(eq_int_good[3:4]))
#####################################################################
# 2a. Downstream production - complete information
#####################################################################
unlist(eq_int_good[1:4])
unlist(eq_int_good[1:4])
u_firms_unint(c(0.7, 0.7),c(0.3, 0.3))
u_firms_unint(c(0.7, 0.7),c(0.4, 0.4))
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
source('G:/My Drive/Ivan/College/2018-2019/Indep Study/R Code/2-16/main_test.R', echo=TRUE)
